/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package repositories;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class UserSchemaModel extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"UserSchemaModel\",\"namespace\":\"repositories\",\"fields\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"email\",\"type\":\"string\"},{\"name\":\"contact\",\"type\":\"string\"},{\"name\":\"uuid\",\"type\":\"string\"},{\"name\":\"address\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"landMark\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"secondContact\",\"type\":[\"null\",\"string\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence name;
  @Deprecated public java.lang.CharSequence email;
  @Deprecated public java.lang.CharSequence contact;
  @Deprecated public java.lang.CharSequence uuid;
  @Deprecated public java.lang.CharSequence address;
  @Deprecated public java.lang.CharSequence landMark;
  @Deprecated public java.lang.CharSequence secondContact;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public UserSchemaModel() {}

  /**
   * All-args constructor.
   */
  public UserSchemaModel(java.lang.CharSequence name, java.lang.CharSequence email, java.lang.CharSequence contact, java.lang.CharSequence uuid, java.lang.CharSequence address, java.lang.CharSequence landMark, java.lang.CharSequence secondContact) {
    this.name = name;
    this.email = email;
    this.contact = contact;
    this.uuid = uuid;
    this.address = address;
    this.landMark = landMark;
    this.secondContact = secondContact;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return name;
    case 1: return email;
    case 2: return contact;
    case 3: return uuid;
    case 4: return address;
    case 5: return landMark;
    case 6: return secondContact;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: name = (java.lang.CharSequence)value$; break;
    case 1: email = (java.lang.CharSequence)value$; break;
    case 2: contact = (java.lang.CharSequence)value$; break;
    case 3: uuid = (java.lang.CharSequence)value$; break;
    case 4: address = (java.lang.CharSequence)value$; break;
    case 5: landMark = (java.lang.CharSequence)value$; break;
    case 6: secondContact = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'name' field.
   */
  public java.lang.CharSequence getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'email' field.
   */
  public java.lang.CharSequence getEmail() {
    return email;
  }

  /**
   * Sets the value of the 'email' field.
   * @param value the value to set.
   */
  public void setEmail(java.lang.CharSequence value) {
    this.email = value;
  }

  /**
   * Gets the value of the 'contact' field.
   */
  public java.lang.CharSequence getContact() {
    return contact;
  }

  /**
   * Sets the value of the 'contact' field.
   * @param value the value to set.
   */
  public void setContact(java.lang.CharSequence value) {
    this.contact = value;
  }

  /**
   * Gets the value of the 'uuid' field.
   */
  public java.lang.CharSequence getUuid() {
    return uuid;
  }

  /**
   * Sets the value of the 'uuid' field.
   * @param value the value to set.
   */
  public void setUuid(java.lang.CharSequence value) {
    this.uuid = value;
  }

  /**
   * Gets the value of the 'address' field.
   */
  public java.lang.CharSequence getAddress() {
    return address;
  }

  /**
   * Sets the value of the 'address' field.
   * @param value the value to set.
   */
  public void setAddress(java.lang.CharSequence value) {
    this.address = value;
  }

  /**
   * Gets the value of the 'landMark' field.
   */
  public java.lang.CharSequence getLandMark() {
    return landMark;
  }

  /**
   * Sets the value of the 'landMark' field.
   * @param value the value to set.
   */
  public void setLandMark(java.lang.CharSequence value) {
    this.landMark = value;
  }

  /**
   * Gets the value of the 'secondContact' field.
   */
  public java.lang.CharSequence getSecondContact() {
    return secondContact;
  }

  /**
   * Sets the value of the 'secondContact' field.
   * @param value the value to set.
   */
  public void setSecondContact(java.lang.CharSequence value) {
    this.secondContact = value;
  }

  /** Creates a new UserSchemaModel RecordBuilder */
  public static repositories.UserSchemaModel.Builder newBuilder() {
    return new repositories.UserSchemaModel.Builder();
  }
  
  /** Creates a new UserSchemaModel RecordBuilder by copying an existing Builder */
  public static repositories.UserSchemaModel.Builder newBuilder(repositories.UserSchemaModel.Builder other) {
    return new repositories.UserSchemaModel.Builder(other);
  }
  
  /** Creates a new UserSchemaModel RecordBuilder by copying an existing UserSchemaModel instance */
  public static repositories.UserSchemaModel.Builder newBuilder(repositories.UserSchemaModel other) {
    return new repositories.UserSchemaModel.Builder(other);
  }
  
  /**
   * RecordBuilder for UserSchemaModel instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<UserSchemaModel>
    implements org.apache.avro.data.RecordBuilder<UserSchemaModel> {

    private java.lang.CharSequence name;
    private java.lang.CharSequence email;
    private java.lang.CharSequence contact;
    private java.lang.CharSequence uuid;
    private java.lang.CharSequence address;
    private java.lang.CharSequence landMark;
    private java.lang.CharSequence secondContact;

    /** Creates a new Builder */
    private Builder() {
      super(repositories.UserSchemaModel.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(repositories.UserSchemaModel.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.name)) {
        this.name = data().deepCopy(fields()[0].schema(), other.name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.email)) {
        this.email = data().deepCopy(fields()[1].schema(), other.email);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.contact)) {
        this.contact = data().deepCopy(fields()[2].schema(), other.contact);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.uuid)) {
        this.uuid = data().deepCopy(fields()[3].schema(), other.uuid);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.address)) {
        this.address = data().deepCopy(fields()[4].schema(), other.address);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.landMark)) {
        this.landMark = data().deepCopy(fields()[5].schema(), other.landMark);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.secondContact)) {
        this.secondContact = data().deepCopy(fields()[6].schema(), other.secondContact);
        fieldSetFlags()[6] = true;
      }
    }
    
    /** Creates a Builder by copying an existing UserSchemaModel instance */
    private Builder(repositories.UserSchemaModel other) {
            super(repositories.UserSchemaModel.SCHEMA$);
      if (isValidValue(fields()[0], other.name)) {
        this.name = data().deepCopy(fields()[0].schema(), other.name);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.email)) {
        this.email = data().deepCopy(fields()[1].schema(), other.email);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.contact)) {
        this.contact = data().deepCopy(fields()[2].schema(), other.contact);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.uuid)) {
        this.uuid = data().deepCopy(fields()[3].schema(), other.uuid);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.address)) {
        this.address = data().deepCopy(fields()[4].schema(), other.address);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.landMark)) {
        this.landMark = data().deepCopy(fields()[5].schema(), other.landMark);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.secondContact)) {
        this.secondContact = data().deepCopy(fields()[6].schema(), other.secondContact);
        fieldSetFlags()[6] = true;
      }
    }

    /** Gets the value of the 'name' field */
    public java.lang.CharSequence getName() {
      return name;
    }
    
    /** Sets the value of the 'name' field */
    public repositories.UserSchemaModel.Builder setName(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.name = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'name' field has been set */
    public boolean hasName() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'name' field */
    public repositories.UserSchemaModel.Builder clearName() {
      name = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'email' field */
    public java.lang.CharSequence getEmail() {
      return email;
    }
    
    /** Sets the value of the 'email' field */
    public repositories.UserSchemaModel.Builder setEmail(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.email = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'email' field has been set */
    public boolean hasEmail() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'email' field */
    public repositories.UserSchemaModel.Builder clearEmail() {
      email = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'contact' field */
    public java.lang.CharSequence getContact() {
      return contact;
    }
    
    /** Sets the value of the 'contact' field */
    public repositories.UserSchemaModel.Builder setContact(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.contact = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'contact' field has been set */
    public boolean hasContact() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'contact' field */
    public repositories.UserSchemaModel.Builder clearContact() {
      contact = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'uuid' field */
    public java.lang.CharSequence getUuid() {
      return uuid;
    }
    
    /** Sets the value of the 'uuid' field */
    public repositories.UserSchemaModel.Builder setUuid(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.uuid = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'uuid' field has been set */
    public boolean hasUuid() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'uuid' field */
    public repositories.UserSchemaModel.Builder clearUuid() {
      uuid = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'address' field */
    public java.lang.CharSequence getAddress() {
      return address;
    }
    
    /** Sets the value of the 'address' field */
    public repositories.UserSchemaModel.Builder setAddress(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.address = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'address' field has been set */
    public boolean hasAddress() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'address' field */
    public repositories.UserSchemaModel.Builder clearAddress() {
      address = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'landMark' field */
    public java.lang.CharSequence getLandMark() {
      return landMark;
    }
    
    /** Sets the value of the 'landMark' field */
    public repositories.UserSchemaModel.Builder setLandMark(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.landMark = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'landMark' field has been set */
    public boolean hasLandMark() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'landMark' field */
    public repositories.UserSchemaModel.Builder clearLandMark() {
      landMark = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'secondContact' field */
    public java.lang.CharSequence getSecondContact() {
      return secondContact;
    }
    
    /** Sets the value of the 'secondContact' field */
    public repositories.UserSchemaModel.Builder setSecondContact(java.lang.CharSequence value) {
      validate(fields()[6], value);
      this.secondContact = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'secondContact' field has been set */
    public boolean hasSecondContact() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'secondContact' field */
    public repositories.UserSchemaModel.Builder clearSecondContact() {
      secondContact = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    @Override
    public UserSchemaModel build() {
      try {
        UserSchemaModel record = new UserSchemaModel();
        record.name = fieldSetFlags()[0] ? this.name : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.email = fieldSetFlags()[1] ? this.email : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.contact = fieldSetFlags()[2] ? this.contact : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.uuid = fieldSetFlags()[3] ? this.uuid : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.address = fieldSetFlags()[4] ? this.address : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.landMark = fieldSetFlags()[5] ? this.landMark : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.secondContact = fieldSetFlags()[6] ? this.secondContact : (java.lang.CharSequence) defaultValue(fields()[6]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
